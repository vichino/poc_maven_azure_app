trigger:
- main

variables:
  # Service connection to the Azure subscription (ARM)
  azureSubscription: '<service_connection_azure>'
  # Service connection to ACR (Docker Registry)
  containerRegistryServiceConnection: '<service_connection_acr>'
  # ACR login server (e.g., myregistry.azurecr.io)
  acrLoginServer: '<acr_login_server>'
  # Image repository name within the registry
  imageRepository: 'poc-maven-azure-app'
  # Azure Web App for Containers name
  webAppName: '<nombre_webapp>'
  # Optional: Environment name in Azure DevOps
  environmentName: '<nombre_environment>'

stages:
- stage: Build
  displayName: Build and Push Image
  jobs:
  - job: BuildPush
    displayName: Build JAR and container
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Maven@4
      displayName: 'Maven package'
      inputs:
        mavenPomFile: '$(System.DefaultWorkingDirectory)/pom.xml'
        mavenOptions: '-Xmx1024m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.21'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        goals: 'clean package -DskipTests'

    - task: Docker@2
      displayName: 'Build and push image'
      inputs:
        command: buildAndPush
        repository: '$(imageRepository)'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        containerRegistry: '$(containerRegistryServiceConnection)'
        buildContext: '$(Build.SourcesDirectory)'
        tags: |
          $(Build.BuildId)
          latest

- stage: Deploy
  displayName: Deploy to Web App
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployContainer
    displayName: Deploy container to Web App
    environment: '$(environmentName)'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            displayName: 'Deploy to Azure Web App (Container)'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appName: '$(webAppName)'
              containers: '$(acrLoginServer)/$(imageRepository):$(Build.BuildId)'

